<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://frankkim1108.github.io/</id><title>Jong Wook Kim</title><subtitle>Computer Science and Engineering major interested in Conputer Vision and passionate about learning new things!</subtitle> <updated>2023-01-31T19:44:32+09:00</updated> <author> <name>Jong Wook Kim</name> <uri>https://frankkim1108.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://frankkim1108.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://frankkim1108.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2023 Jong Wook Kim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Transformer(NIPS 2017)</title><link href="https://frankkim1108.github.io/posts/Transformer-review/" rel="alternate" type="text/html" title="Transformer(NIPS 2017)" /><published>2022-12-27T14:00:12+09:00</published> <updated>2022-12-27T14:00:12+09:00</updated> <id>https://frankkim1108.github.io/posts/Transformer-review/</id> <content src="https://frankkim1108.github.io/posts/Transformer-review/" /> <author> <name>Jong Wook Kim</name> </author> <category term="Paper Review" /> <summary> Transformer Development of Machine Translation based on Deep Learning Since 2021, new models are based on Transformer architecture GPT: Based on Transformer’s Decoder BERT: Based on Transformer’s Encoder The limit of Seq2Seq models Information of source sentences are compressed into context vector $v$ This results in bottleneck and decreases the pe... </summary> </entry> <entry><title>DALL-E Paper Review</title><link href="https://frankkim1108.github.io/posts/DALL-E-(OpenAI-2021)-review/" rel="alternate" type="text/html" title="DALL-E Paper Review" /><published>2022-12-20T21:19:04+09:00</published> <updated>2023-01-27T01:28:57+09:00</updated> <id>https://frankkim1108.github.io/posts/DALL-E-(OpenAI-2021)-review/</id> <content src="https://frankkim1108.github.io/posts/DALL-E-(OpenAI-2021)-review/" /> <author> <name>Jong Wook Kim</name> </author> <category term="Paper Review" /> <summary> What is DALL-E DALL-E is a GPT-3 based model that has has 12 billion parameters and is trained with 250 million data Personifying object is possible, combining two different concept which are unrelated is possible It shows great performance without complex architecture or additional label info Well trained DALL-E shows a great performance even in zero-shot situations Background Info ... </summary> </entry> <entry><title>Progressive GAN Paper Review</title><link href="https://frankkim1108.github.io/posts/ProgressiveGAN-review/" rel="alternate" type="text/html" title="Progressive GAN Paper Review" /><published>2022-11-07T21:19:04+09:00</published> <updated>2022-12-20T18:00:20+09:00</updated> <id>https://frankkim1108.github.io/posts/ProgressiveGAN-review/</id> <content src="https://frankkim1108.github.io/posts/ProgressiveGAN-review/" /> <author> <name>Jong Wook Kim</name> </author> <category term="Paper Review" /> <summary> Progressive Growing of GANs For Improved Quality, Stability and Variation 1. Abstract 1. Problem PGGAN(Progressive Growing of GANs) became a big issue when it was first introduced in 2017 Nvidia’s paper. On a typical GAN model, creating a high resolution image can cause some problems. Creating a high resolution image is very hard. Because as the image resolution gets higher, discriminator... </summary> </entry> <entry><title>Different way of detecting doors and windows</title><link href="https://frankkim1108.github.io/posts/FTB-13/" rel="alternate" type="text/html" title="Different way of detecting doors and windows" /><published>2022-07-28T17:13:37+09:00</published> <updated>2022-08-13T19:10:00+09:00</updated> <id>https://frankkim1108.github.io/posts/FTB-13/</id> <content src="https://frankkim1108.github.io/posts/FTB-13/" /> <author> <name>Jong Wook Kim</name> </author> <category term="FloorPlanToBlender3D" /> <summary> FloorplanToBlender3D Different way of detecting doors and windows def find_details() Parameters img : gray scale image of the room, also eroded and doors removed noise_removal_threshold : Minimal area of blobs to be kept corners_threshold : Threshold to allow corners. (Higher removes more of the house) room_closing_max_length : Maximum line length to add to close off open doors. g... </summary> </entry> <entry><title>How windows and doors are detected</title><link href="https://frankkim1108.github.io/posts/FTB-12/" rel="alternate" type="text/html" title="How windows and doors are detected" /><published>2022-07-25T21:00:45+09:00</published> <updated>2022-07-25T21:00:45+09:00</updated> <id>https://frankkim1108.github.io/posts/FTB-12/</id> <content src="https://frankkim1108.github.io/posts/FTB-12/" /> <author> <name>Jong Wook Kim</name> </author> <category term="FloorPlanToBlender3D" /> <summary> FloorplanToBlender3D How windows and doors are detected def feature_match(img1, img2): using cv2.ORB_create() ORB keypoint detector is created keypoints and descriptors of floorplan image and window/door model is created cv2.detectAndCompute keypoints, descriptor is returned pt : coordinates of the keypoint [x,y] size : diameter of the meaningful keypoint ne... </summary> </entry> </feed>
